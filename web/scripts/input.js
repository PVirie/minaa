input = (function () {
    const svgs = {
        pointer: {
            width: 122,
            height: 122,
            offsetX: 52,
            offsetY: 61,
            data: "M25.85,63.15c-0.04-0.12-0.08-0.28-0.1-0.42c-0.22-1.89-0.43-3.98-0.62-5.78c-0.26-2.64-0.55-5.69-0.76-7.83 c-0.14-1.45-0.6-2.83-1.27-3.86c-0.45-0.66-0.95-1.15-1.51-1.39c-0.45-0.18-1-0.2-1.57,0.02c-0.78,0.3-1.65,0.93-2.62,2.03 c-0.86,0.98-1.53,2.29-2.09,3.68c-0.79,2.03-1.26,4.19-1.45,5.67c-0.02,0.1-0.02,0.18-0.06,0.26L8.42,86.07 c-0.08,0.4-0.24,0.76-0.48,1.04c-1.81,2.33-2.95,4.33-3.28,5.95c-0.24,1.19,0,2.15,0.79,2.9l19.8,19.8 c1.26,1.21,2.72,1.97,4.47,2.29c1.91,0.36,4.14,0.16,6.7-0.54c0.04,0,0.1-0.02,0.14-0.02c0.97-0.26,2.24-0.57,3.46-0.88 c5.31-1.29,9.94-2.43,14.23-6.33l5.52-5.76c0.05-0.1,0.14-0.18,0.22-0.26s0.62-0.62,1.35-1.31c3.78-3.69,8.45-8.25,5.61-12.24 l-2.21-2.21c-1.07,1.04-2.21,2.05-3.3,3.02c-1,0.88-1.93,1.69-2.78,2.55c-0.91,0.91-2.38,0.91-3.3,0c-0.91-0.92-0.91-2.38,0-3.3 c0.86-0.86,1.91-1.79,3-2.76c3.74-3.3,8.03-7.07,5.73-10.38l-2.19-2.19c-0.12-0.12-0.22-0.26-0.31-0.4c-1.26,1.29-2.64,2.52-4,3.72 c-1,0.88-1.93,1.69-2.78,2.55c-0.91,0.91-2.38,0.91-3.3,0s-0.91-2.38,0-3.3c0.86-0.86,1.91-1.79,3-2.76 c3.74-3.3,8.03-7.07,5.73-10.38l-2.19-2.19c-0.16-0.16-0.28-0.31-0.38-0.5l-6.42,6.42c-0.91,0.91-2.38,0.91-3.3,0s-0.91-2.38,0-3.3 l17.22-17.25c2.88-2.88,3.54-5.88,2.78-8.15c-0.28-0.83-0.74-1.57-1.31-2.14s-1.31-1.03-2.14-1.31c-2.24-0.74-5.23-0.06-8.19,2.9 l-30.2,30.2c-0.91,0.91-2.38,0.91-3.3,0s-0.91-2.38,0-3.3l3.07-3.07L25.85,63.15L25.85,63.15L25.85,63.15z M83.23,24.31 c-1.22,1.3-3.24,1.34-4.52,0.14c-1.3-1.22-1.34-3.24-0.14-4.52l8.82-9.39c1.22-1.3,3.25-1.34,4.52-0.14 c1.3,1.22,1.34,3.24,0.14,4.52L83.23,24.31L83.23,24.31L83.23,24.31L83.23,24.31z M43.96,23.65c1.3,1.22,1.34,3.25,0.14,4.52 c-1.22,1.3-3.25,1.34-4.52,0.14l-9.4-8.82c-1.29-1.23-1.33-3.25-0.14-4.52c1.22-1.3,3.25-1.34,4.52-0.14L43.96,23.65L43.96,23.65 L43.96,23.65z M63.69,15.96c0.05,1.76-1.34,3.24-3.09,3.3s-3.24-1.34-3.3-3.09L56.91,3.3c-0.06-1.75,1.34-3.24,3.09-3.3 c1.76-0.05,3.24,1.34,3.29,3.09L63.69,15.96L63.69,15.96L63.69,15.96z M76.88,63.31c-1.3-1.22-1.34-3.25-0.14-4.52 c1.22-1.3,3.24-1.34,4.52-0.14l9.39,8.82c1.3,1.22,1.34,3.24,0.14,4.52c-1.22,1.3-3.24,1.34-4.52,0.14L76.88,63.31L76.88,63.31 L76.88,63.31z M88.36,44.35c-1.75,0.06-3.24-1.34-3.3-3.09c-0.05-1.75,1.34-3.24,3.09-3.3l12.86-0.43c1.75-0.06,3.24,1.34,3.3,3.09 s-1.34,3.24-3.09,3.3L88.36,44.35L88.36,44.35L88.36,44.35z M60.88,58.97c0.17,0.1,0.34,0.22,0.5,0.38l2.29,2.29 c0.12,0.12,0.24,0.28,0.34,0.42c2.57,3.52,2.17,6.66,0.42,9.52c0.31,0.12,0.62,0.29,0.86,0.54l2.29,2.29 c0.12,0.12,0.24,0.28,0.34,0.42c2.76,3.8,2.07,7.12,0,10.14c0.1,0.05,0.17,0.14,0.28,0.24l2.29,2.29c0.12,0.12,0.24,0.28,0.34,0.42 c5.31,7.26-1.02,13.42-6.1,18.39l-1.31,1.31l-5.67,5.95l-0.18,0.17c-5.19,4.71-10.33,5.97-16.28,7.42c-1,0.24-2,0.5-3.4,0.86 c-0.04,0-0.06,0.02-0.1,0.02c-3.22,0.88-6.14,1.09-8.76,0.62c-2.66-0.48-4.97-1.67-6.9-3.56L2.31,99.29 c-2-1.93-2.69-4.31-2.12-7.14c0.43-2.26,1.75-4.77,3.81-7.47L9.3,54.74v-0.12c0.24-1.71,0.78-4.24,1.71-6.68 c0.71-1.83,1.67-3.62,2.92-5.07c1.51-1.71,3-2.76,4.47-3.32c1.81-0.69,3.54-0.6,5.07,0.06c1.43,0.6,2.64,1.69,3.56,3.08 c1.12,1.67,1.85,3.8,2.05,6.02c0.16,1.83,0.48,4.85,0.78,7.81l0.24,2.47L53,36.07c4.4-4.4,9.16-5.27,12.97-4.02 c1.53,0.5,2.88,1.33,4,2.45s1.95,2.47,2.45,4c1.26,3.8,0.4,8.63-3.92,12.95l-7.59,7.59L60.88,58.97L60.88,58.97L60.88,58.97z",
        },
        drag: {
            width: 124,
            height: 124,
            offsetX: 60,
            offsetY: 60,
            data: "M42.58,69.16a2.52,2.52,0,0,1-.48-.3c-2-1.55-4.09-3.28-5.94-4.8-2.69-2.21-5.79-4.76-8-6.57a11.36,11.36,0,0,0-4.76-2.4,5.07,5.07,0,0,0-2.69.11,2.82,2.82,0,0,0-1.44,1.48A9.48,9.48,0,0,0,18.75,61a16.75,16.75,0,0,0,1.48,5.35A33.68,33.68,0,0,0,24.14,73a1,1,0,0,1,.18.3L47.67,106.6a2.93,2.93,0,0,1,.52,1.4c.48,3.84,1.29,6.75,2.47,8.56a3.81,3.81,0,0,0,3.43,2H90.83a11,11,0,0,0,6.27-2,20.06,20.06,0,0,0,5.72-6.71s.07-.11.11-.15c.66-1.14,1.55-2.62,2.4-4,3.73-6.12,7-11.47,7.34-19.07l-.22-10.48a1.64,1.64,0,0,1,0-.44c0-.15,0-1.14,0-2.47.07-6.93.18-15.49-6.16-16.56H102.2c0,2-.15,4-.26,5.87-.11,1.73-.22,3.36-.22,4.94a3.06,3.06,0,1,1-6.12,0c0-1.59.11-3.43.22-5.35.41-6.53.89-14-4.32-14.94H87.44a4.93,4.93,0,0,1-.66-.07c0,2.36-.11,4.8-.26,7.16-.11,1.73-.22,3.36-.22,4.94a3.06,3.06,0,0,1-6.12,0c0-1.59.11-3.43.22-5.35.41-6.53.88-14-4.32-14.94H72a3,3,0,0,1-.81-.11V50.65a3.06,3.06,0,1,1-6.12,0v-32c0-5.35-2.18-8.74-5-10.14a7.15,7.15,0,0,0-3.21-.77,7.28,7.28,0,0,0-3.21.77c-2.77,1.4-4.91,4.8-4.91,10.29v56a3.06,3.06,0,0,1-6.12,0V69.16ZM12.29,28.69a2.61,2.61,0,0,0,3.78-3.6L8.7,17.38H30.84a2.61,2.61,0,1,0,0-5.22H8.7l7.38-7.75A2.61,2.61,0,0,0,12.3.81L.72,13a2.62,2.62,0,0,0,0,3.6L12.29,28.69ZM102.52.81a2.61,2.61,0,1,0-3.78,3.6l7.37,7.71H84a2.61,2.61,0,1,0,0,5.22h22.14l-7.38,7.75a2.61,2.61,0,0,0,3.78,3.6l11.58-12.16a2.62,2.62,0,0,0,0-3.6L102.52.81Zm-31.32,32a3,3,0,0,1,.81-.11h4.24a5.53,5.53,0,0,1,.7.07c5.64.89,8.19,4.17,9.22,8.45a3.24,3.24,0,0,1,1.29-.3H91.7a5.53,5.53,0,0,1,.7.07c6.09,1,8.52,4.68,9.41,9.41a1.83,1.83,0,0,1,.48,0h4.24a5.53,5.53,0,0,1,.7.07c11.66,1.81,11.51,13.39,11.4,22.72v2.43l.26,10.77v.33c-.44,9.19-4.06,15.12-8.23,22-.7,1.14-1.4,2.32-2.36,4,0,0,0,.07-.07.11a26.19,26.19,0,0,1-7.56,8.71,17,17,0,0,1-9.7,3.1H54.27a9.62,9.62,0,0,1-8.6-4.65c-1.7-2.51-2.8-6-3.39-10.48L19.41,76.72l-.11-.11a42.42,42.42,0,0,1-4.61-7.78,23.05,23.05,0,0,1-2-7.41,15.16,15.16,0,0,1,1.07-7.23,8.62,8.62,0,0,1,4.76-4.65,10.52,10.52,0,0,1,6.16-.44,17.26,17.26,0,0,1,7.49,3.69c1.84,1.55,4.94,4.06,8,6.53l2.51,2.07V18.84c0-8.15,3.62-13.39,8.3-15.75a13.12,13.12,0,0,1,11.95,0c4.69,2.36,8.37,7.64,8.37,15.64V32.82l-.08,0Z",
        },
        motion: {
            width: 24,
            height: 24,
            offsetX: 12,
            offsetY: 12,
            data: "M 19.552 7.582 C 19.636 7.713 19.664 7.918 19.631 8.054 C 19.597 8.191 19.479 8.358 19.344 8.438 C 19.21 8.519 19.003 8.545 18.862 8.513 C 18.721 8.481 18.546 8.364 18.462 8.232 C 18.378 8.101 18.35 7.896 18.383 7.76 C 18.417 7.623 18.535 7.456 18.67 7.376 C 18.805 7.295 19.012 7.269 19.153 7.301 C 19.293 7.333 19.469 7.45 19.552 7.582 Z M 19.042 7.781 C 18.99 7.77 18.986 7.769 18.938 7.798 C 18.89 7.827 18.888 7.83 18.876 7.881 C 18.863 7.931 18.863 7.931 18.891 7.976 C 18.92 8.021 18.92 8.021 18.972 8.033 C 19.025 8.044 19.028 8.045 19.076 8.016 C 19.124 7.987 19.126 7.984 19.139 7.933 C 19.152 7.883 19.152 7.883 19.123 7.838 C 19.095 7.793 19.095 7.793 19.042 7.781 Z M 4.214 11.715 L 14.907 5.332 C 15.19 5.176 15.559 5.12 15.852 5.19 C 16.145 5.26 16.448 5.476 16.631 5.743 L 19.818 10.763 C 19.982 11.041 20.044 11.401 19.976 11.686 C 19.909 11.971 19.691 12.265 19.42 12.44 L 8.727 18.822 C 8.444 18.979 8.075 19.034 7.782 18.965 C 7.489 18.895 7.185 18.679 7.003 18.412 L 3.816 13.392 C 3.652 13.114 3.59 12.754 3.658 12.469 C 3.725 12.184 3.943 11.89 4.214 11.715 Z M 4.151 12.586 C 4.104 12.786 4.117 12.955 4.245 13.136 L 7.432 18.156 C 7.541 18.348 7.692 18.436 7.896 18.484 C 8.101 18.534 8.275 18.523 8.459 18.4 L 19.152 12.018 C 19.347 11.914 19.436 11.768 19.482 11.569 C 19.53 11.37 19.517 11.2 19.389 11.019 L 16.202 5.999 C 16.093 5.807 15.942 5.719 15.737 5.67 C 15.533 5.621 15.359 5.632 15.175 5.755 L 4.482 12.137 C 4.287 12.241 4.198 12.387 4.151 12.586 Z M 2.328 11.445 L 16.406 3.041 C 16.69 2.885 17.058 2.829 17.351 2.899 C 17.644 2.968 17.948 3.184 18.131 3.451 L 22.589 10.473 C 22.752 10.751 22.814 11.111 22.747 11.396 C 22.679 11.681 22.462 11.975 22.19 12.15 L 8.112 20.554 C 7.828 20.71 7.46 20.766 7.167 20.696 C 6.874 20.626 6.57 20.41 6.387 20.143 L 1.929 13.122 C 1.765 12.843 1.704 12.483 1.771 12.198 C 1.839 11.913 2.056 11.619 2.328 11.445 Z M 2.265 12.316 C 2.218 12.515 2.231 12.685 2.359 12.866 L 6.817 19.887 C 6.926 20.079 7.077 20.167 7.281 20.215 C 7.485 20.265 7.66 20.254 7.843 20.131 L 21.922 11.728 C 22.118 11.624 22.206 11.478 22.253 11.279 C 22.301 11.08 22.287 10.91 22.159 10.729 L 17.701 3.708 C 17.592 3.515 17.442 3.428 17.237 3.379 C 17.033 3.33 16.858 3.341 16.675 3.463 L 2.596 11.867 C 2.4 11.971 2.312 12.117 2.265 12.316 Z M 24.402 8.471 L 23.746 9.362 L 23.608 9.55 L 23.411 9.425 L 22.441 8.807 L 22.709 8.385 L 23.482 8.878 L 24 8.175 L 24.402 8.471 Z M 14.724 0.935 C 14.724 0.793 14.832 0.677 14.966 0.677 C 17.186 0.69 19.408 1.795 21.027 3.394 C 21.838 4.195 22.525 5.142 22.997 6.125 C 23.233 6.618 23.424 7.139 23.551 7.65 C 23.678 8.164 23.74 9.148 23.74 9.148 C 23.743 9.163 23.74 9.148 23.74 9.148 C 23.754 9.239 23.721 9.33 23.654 9.389 C 23.588 9.448 23.497 9.464 23.416 9.432 C 23.335 9.399 23.277 9.322 23.264 9.231 C 23.264 9.231 23.263 9.227 23.264 9.231 C 23.264 9.231 23.259 8.979 23.251 8.858 C 23.243 8.737 23.232 8.621 23.217 8.5 C 23.186 8.258 23.141 8.024 23.081 7.782 C 22.962 7.298 22.79 6.829 22.565 6.36 C 22.114 5.418 21.479 4.544 20.697 3.772 C 19.131 2.225 17.084 1.181 14.966 1.193 C 14.832 1.193 14.724 1.077 14.724 0.935 Z M 15.492 1.963 L 14.788 1.107 L 14.622 0.905 L 14.824 0.736 L 15.702 0 L 16 0.401 L 15.323 0.968 L 15.862 1.621 L 15.492 1.963 Z M 8.93 22.079 L 9.634 22.935 L 9.8 23.138 L 9.598 23.307 L 8.719 24.042 L 8.422 23.641 L 9.099 23.075 L 8.561 22.421 L 8.93 22.079 Z M 9.679 23.107 C 9.679 23.25 9.57 23.365 9.437 23.365 C 7.216 23.353 4.995 22.247 3.376 20.648 C 2.564 19.847 1.878 18.9 1.406 17.917 C 1.17 17.424 0.979 16.904 0.852 16.391 C 0.725 15.878 0.663 14.894 0.663 14.894 C 0.66 14.878 0.663 14.894 0.663 14.894 C 0.648 14.803 0.681 14.711 0.748 14.652 C 0.814 14.593 0.905 14.578 0.987 14.61 C 1.067 14.643 1.125 14.719 1.139 14.81 C 1.139 14.81 1.14 14.814 1.139 14.81 C 1.139 14.81 1.144 15.063 1.151 15.183 C 1.159 15.304 1.171 15.421 1.185 15.541 C 1.216 15.784 1.261 16.018 1.321 16.259 C 1.44 16.744 1.612 17.212 1.838 17.682 C 2.289 18.623 2.924 19.498 3.705 20.27 C 5.271 21.816 7.32 22.862 9.437 22.85 C 9.57 22.85 9.679 22.965 9.679 23.107 Z M 0 15.571 C 0 15.571 0.656 14.68 0.656 14.68 L 0.794 14.492 L 0.991 14.617 L 1.961 15.235 L 1.693 15.657 L 0.92 15.164 C 0.92 15.164 0.402 15.867 0.402 15.867 L 0 15.571 Z",
        },
    };

    let gyro_present = false;
    let screen = null;

    const is_touch_device = "ontouchstart" in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;

    let filter_x = null;
    let filter_y = null;
    let countdown_start = 10;
    const on_device_orientation = function (event) {
        // console.log(window.orientation, event.alpha, event.beta, event.gamma);
        if (countdown_start > 0) {
            countdown_start -= 1;
            return;
        }

        const verticle = window.orientation == 0 || window.orientation == 180;
        const flip = window.orientation == 90 || window.orientation == 180;

        const rx = util.normalize(event.alpha - window.orientation);
        // let rx = (verticle? event.gamma: event.beta);
        // rx = flip? -rx: rx;
        // rx = util.normalize(rx);
        let ry = verticle ? event.beta : event.gamma;
        ry = flip ? -ry : ry;
        ry = util.normalize(ry);

        if (filter_x == null) {
            filter_x = new Exp_average(rx, 0.05);
        }
        if (filter_y == null) {
            filter_y = new Exp_average(ry, 0.05);
        }

        const x = filter_x.filter(rx);
        const y = filter_y.filter(ry);
        on_pan_(util.clip(x / 40, -1, 1), util.clip(y / 40, -1, 1));
    };

    const on_device_motion = function (event) {
        if (filter_x == null) {
            return;
        }
        if (filter_y == null) {
            return;
        }

        const acg = event.accelerationIncludingGravity;
        const or = util.compute_orientation(acg.x, acg.y, acg.z);

        const x = filter_x.filter(or[2] + 90);
        const y = filter_y.filter(or[0]);
        on_pan_(util.clip(x / 40, -1, 1), util.clip(y / 40, -1, 1));
    };

    const request_motion = async function () {
        let response = true;
        // Request permission for iOS 13+ devices
        if (DeviceOrientationEvent && typeof DeviceOrientationEvent.requestPermission === "function") {
            try {
                response = await DeviceOrientationEvent.requestPermission();
                if (response == "granted") {
                    response = true;
                } else {
                    response = false;
                }
            } catch (error) {
                response = false;
            }
        }

        if (response) {
            try {
                gyro_present = true;
                // window.addEventListener("devicemotion", on_device_motion);
                window.addEventListener("deviceorientation", on_device_orientation);
                return true;
            } catch (error) {
                return false;
            }
        }
        return false;
    };

    const initialize = async function (on_pan) {
        on_pan_ = on_pan;
        const ul = document.querySelector("#input-list");
        ul.classList.add("show");

        // {
        //     const li = document.createElement("li");
        //     li.appendChild(util.build_svg_dom(svgs.pointer));
        //     li.addEventListener('click', function(e) {
        //         e.stopPropagation();
        //         screen.set_draggable();
        //         screen.set_pointer();
        //         ul.classList.remove("show");
        //         ul.classList.add("hide");
        //     });
        //     ul.appendChild(li);
        // }
        {
            const li = document.createElement("li");
            li.appendChild(util.build_svg_dom(svgs.drag));
            li.addEventListener("click", function (e) {
                e.stopPropagation();
                screen.set_draggable();
                ul.classList.remove("show");
                ul.classList.add("hide");
            });
            ul.appendChild(li);
        }
        {
            const li = document.createElement("li");
            li.appendChild(util.build_svg_dom(svgs.motion));
            li.addEventListener("click", async function (e) {
                e.stopPropagation();
                await request_motion();
                ul.classList.remove("show");
                ul.classList.add("hide");
            });
            ul.appendChild(li);
        }
    };

    return {
        initialize: initialize,
        check_is_touch_device: function () {
            return is_touch_device;
        },
        is_running: function () {
            return gyro_present;
        },
    };
})();
